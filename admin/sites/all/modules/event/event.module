<?php
/**
 * Created by PhpStorm.
 * User: debasis
 * Date: 16/6/15
 * Time: 12:04 AM
 */
header('Content-type: text/html');
header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
header("Access-Control-Allow-Credentials: true");
header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
header('Access-Control-Max-Age: 1000');
header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');


function event_init() // init function called by defaulted when this module loaded by system
{

    //echo $GLOBALS['theme'];
    //echo 5656;
    //echo user_authenticate('debasis','Pp@ss1234');

//echo "kl";
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');



}

function event_menu()
{
    $items = array();

    $items['addevent'] = array(
        'title' => 'Add event',
        'page callback' => 'addevent',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['eventlist'] = array(
        'title' => 'event List',
        'page callback' => 'eventlist',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
   $items['updateeventstatus'] = array(
        'title' => 'status Change',
        'page callback' => 'updateeventstatus',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
   $items['deleteevent'] = array(
        'title' => 'event Delete',
        'page callback' => 'deleteevent',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
   $items['eventdetails'] = array(
        'title' => 'event details',
        'page callback' => 'eventdetails',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['eventupdates'] = array(
        'title' => 'event Updates',
        'page callback' => 'eventupdates',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['uploadeventbanner'] = array(
        'title' => 'event Updates',
        'page callback' => 'uploadeventbanner',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['eventlistfrontlisting'] = array(
        'title' => 'Event',
        'page callback' => 'eventlistfrontlisting',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['admineventrsvp'] = array(
        'title' => 'Event',
        'page callback' => 'admineventrsvp',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
/*    $items['backup'] = array(
        'title' => 'backup',
        'page callback' => 'backup',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );*/


     return $items;
}

/*function backup(){

    echo 5;

    $dbhost = 'localhost';
    $dbuser = 'debasis';
    $dbpass = 'P@ss7890';
    $dbname='jungledrone_drupal';

    $backup_file = $dbname . date("Y-m-d-H-i-s") . '.gz';
    $command = "mysqldump --opt -h $dbhost -u $dbuser -p $dbpass ". "test_db | gzip > $backup_file";

    $x=system($command);
    print_r($x);
}
*/
function eventdetails(){
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
    $eventlist = array();


    $queryu = db_select('event', 'ev');

    $queryu->fields('ev', array('id','event_name','event_description','event_location','event_image','event_status', 'event_daterange', 'event_timerange','event_create_time'));
    $queryu->condition('ev.id', $_POST['id'], '=');
    $resultu = $queryu->execute();


    while($recordu = $resultu->fetchAssoc()) {

        $eventlist['id'] = $recordu['id'];
        $eventlist['event_name'] = $recordu['event_name'];
        $eventlist['event_description'] = $recordu['event_description'];
        $eventlist['event_location'] = $recordu['event_location'];
        $eventlist['event_image'] = $recordu['event_image'];
        if($recordu['event_image']=='Null' ||  $recordu['event_image']==''){
            $eventlist['image_url'] =  'images/user2-160x160.jpg';
        }
        else{
            $eventlist['image_url'] =  image_style_url('large',(@$recordu['event_image']));
            $eventlist['event_details_image_url'] =  image_style_url('eventdetails_1132x421_',(@$recordu['event_image']));


        }

        $eventlist['event_status'] = $recordu['event_status'];
        $eventlist['event_daterange'] = $recordu['event_daterange'];
        $eventlist['event_timerange'] = $recordu['event_timerange'];
        $eventlist['event_create_time'] = $recordu['event_create_time'];
    }
    echo json_encode(@$eventlist);

}


function eventlist()
{
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

    $userlist = array();

    $queryu = db_select('event', 'ev');

    $queryu->fields('ev', array('id','user_id','event_name','event_description','event_location','event_image','event_status', 'event_daterange', 'event_timerange','event_create_time'));
        // ->condition('u.name', '%' . db_like('john') . '%', 'LIKE')
       // ->condition('ur.rid', 5, '=');
    //->condition('u.uid', 74, '=');
    //->range(0, 20);
    if(isset($_POST['type']) && $_POST['type']=='front' ){
        $queryu->condition('ev.event_status',1,'=')  ;
    }
    $queryu->orderBy('event_daterange','DESC');
    $resultu = $queryu->execute();


    if ($resultu->rowCount() > 0) {
        $i = 0;
        while ($recordu = $resultu->fetchAssoc()) {
           // $picture=$recordu['event_image'];
           // if(isset($picture->uri))$picture= image_style_url('thumbnail', $picture->uri);
           // else $picture='';

            $eventlist[$i]['id'] = $recordu['id'];
            $eventlist[$i]['user_id'] = $recordu['user_id'];
            $eventlist[$i]['event_name'] = $recordu['event_name'];
            $eventlist[$i]['event_description'] = $recordu['event_description'];
            $eventlist[$i]['event_location'] = $recordu['event_location'];
            if($recordu['event_image']=='Null' ||  $recordu['event_image']==''){
                $eventlist[$i]['event_image'] =  'images/user2-160x160.jpg';
            }
            else{
                $eventlist[$i]['event_image'] =  image_style_url('thumbnail',(@$recordu['event_image']));
                $eventlist[$i]['event_fron_image'] =  image_style_url('eventfront_341x175_',(@$recordu['event_image']));

            }
            $eventlist[$i]['event_status'] = $recordu['event_status'];
            $eventlist[$i]['event_daterange'] = $recordu['event_daterange'];
            if($recordu['event_daterange']!=''){
                $evdate=explode('-',$recordu['event_daterange']);
                $eventlist[$i]['monthh']=date('M',strtotime($evdate[0]));
                $eventlist[$i]['datee']=date('d',strtotime($evdate[0]));
            }
            if($recordu['event_timerange']!=''){
/*                $evtime=explode('to',$recordu['event_timerange']);
                $eventlist[$i]['timee']=date('H:i:s A',$evtime[0]);

                if($recordu['event_timerange']=='all day'){*/
                    $eventlist[$i]['timee']=$recordu['event_timerange'];
                //}
               // $eventlist[$i]['datee']=date('d',strtotime($evdate[0]));
            }

            $eventlist[$i]['event_timerange'] = $recordu['event_timerange'];
            $eventlist[$i]['event_create_time'] = $recordu['event_create_time'];


            $i++;

    }
        echo json_encode(@$eventlist);
}


}
function eventlistfrontlisting()
{
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

    $eventlist = array();
    $queryu = db_select('event', 'ev');

    $queryu->fields('ev', array('id','event_name','event_description','event_image','event_status', 'event_daterange', 'event_timerange','event_create_time'));
    $queryu->condition('ev.event_status', 1, '=');
    $queryu->range(0, 5);
    $queryu->orderBy('event_daterange','desc');
    // ->condition('ur.rid', 5, '=');
    //->condition('u.uid', 74, '=');
    //->range(0, 20);
    $resultu = $queryu->execute();


    if ($resultu->rowCount() > 0) {
        $i = 0;
        while ($recordu = $resultu->fetchAssoc()) {
            // $picture=$recordu['event_image'];
            // if(isset($picture->uri))$picture= image_style_url('thumbnail', $picture->uri);
            // else $picture='';

            $eventlist[$i]['id'] = $recordu['id'];
            $eventlist[$i]['user_id'] = $recordu['user_id'];
            $eventlist[$i]['event_name'] = $recordu['event_name'];
            $eventlist[$i]['event_description'] = $recordu['event_description'];
            if($recordu['event_image']=='Null' ||  $recordu['event_image']==''){
               // $eventlist[$i]['event_image'] =  'images/user2-160x160.jpg';
                $eventlist[$i]['event_image'] =  'images/event_de.png';
            }
            else{
                $eventlist[$i]['event_image'] =  image_style_url('frontend-event',(@$recordu['event_image']));

            }
            $eventlist[$i]['event_status'] = $recordu['event_status'];
            $eventlist[$i]['event_daterange'] = $recordu['event_daterange'];
            $eventlist[$i]['event_timerange'] = $recordu['event_timerange'];
            $eventlist[$i]['event_create_time'] = $recordu['event_create_time'];


            $i++;

        }
    }
    echo json_encode(@$eventlist);

}
function admineventrsvp()
{
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');


    $query = db_select('event', 'ev');
    $query->join('eventrsvp', 'evrsvp', 'ev.id = evrsvp.event_id');
    $query->fields('ev', array('event_name'));
    $query->fields('evrsvp',array('fname','lname','email','phone','gender','id'));
    $query->orderBy('evrsvp.id','DESC');
    // ->condition('u.name', '%' . db_like('john') . '%', 'LIKE')
    //->condition('de.domain_id', 25, '=')
    //->range(0, 20);
    $result = $query->execute();
    if ($result->rowCount() > 0) {
        $i = 0;
        while ($recordu = $result->fetchAssoc()) {
            // $picture=$recordu['event_image'];
            // if(isset($picture->uri))$picture= image_style_url('thumbnail', $picture->uri);
            // else $picture='';

            $eventlist[$i] = $recordu;
            $i++;
        }
    }

    echo json_encode(@$eventlist);

}


function addevent(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
    $user = user_load_by_mail(trim(@$_POST['email']));

    //print_r($_POST);
    ///exit;
    if($_POST['event_status']) $_POST['event_status']=1;
    else $_POST['event_status']=0;
    if($_POST['user_id']) $user_id=$_POST['user_id'];
    else $user_id=0;


        $query = db_insert('event')->fields(array('user_id','event_name','event_description','event_location','event_image','event_status', 'event_daterange', 'event_timerange','event_create_time'));
        //foreach ($values as $record) {
        $query->values(array($user_id,@$_POST['event_name'],@$_POST['event_description'],@$_POST['event_location'],@$_POST['event_image'],@$_POST['event_status'],@$_POST['event_daterange'],@$_POST['timer'], time()));
        //}
        $query->execute();


    $data['status'] = 'success';
     echo json_encode($data);
    return;
}
function eventupdates(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

   /*  $roles = array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        // 5 => 'General Users',
    );
    $roles[5]='event';
    $user_fields = user_load(@intval($_POST['uid']));
    $user_fields->roles=$roles;
    user_save($user_fields);*/


    if($_POST['event_status']) $_POST['event_status']=1;
    else $_POST['event_status']=0;
    db_update('event')
        //->expression('weight', 'weight + :weight', array(':weight' => 1))

            //$query = db_insert('event')->fields(array('user_id','event_name','event_description','event_image','event_status', 'event_daterange', 'event_timerange','event_create_time'));
        //foreach ($values as $record) {
       // $query->values(array(1,@$_POST['event_name'],@$_POST['event_description'],@$_POST['event_image'],@$_POST['event_status'],@$_POST['event_daterange'],@$_POST['timer'], time()));
        //}
        ->fields(array( 'user_id'=>1, 'event_name'=>@$_POST['event_name'], 'event_description'=>$_POST['event_description'], 'event_location'=>$_POST['event_location'],'event_image'=>@$_POST['event_image'],'event_status'=>@$_POST['event_status'],'event_daterange'=>@$_POST['event_daterange'],'event_timerange'=>@$_POST['timer']))
        ->condition('id', intval($_POST['id']))
         ->execute();
}

function updateeventstatus(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
    $event_status=1-intval($_POST['event_status']);
    db_update('event')
        //->expression('weight', 'weight + :weight', array(':weight' => 1))
        ->fields(array( 'event_status'=>@$event_status))
        ->condition('id', intval($_POST['id']))
        ->execute();

    echo "true";
}

function deleteevent(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

    $num_deleted = db_delete('event')
        ->condition('id', @$_POST['id'])
        ->execute();

}

 function uploadeventbanner(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
     set_time_limit(0);

     $target_dir = realpath(dirname(__FILE__))."/uploads/";
     $path_parts = pathinfo($_FILES['Filedata']['name']);
     $filename = rand().'_'.time().'.'.$path_parts['extension'];

     $profile_url = '';

     if (move_uploaded_file($_FILES["Filedata"]["tmp_name"], $target_dir.$filename)) {
         //$account = user_load($_POST['userid']);

         $filepath = ($target_dir.$filename);

         $file = (object) array(
             'uid' => 1,
             'uri' => $filepath,
             'filemime' => file_get_mimetype($filepath),
             'status' => 1,
         );
         if ($file) {
// Move the file, into the Drupal file system
             if ($file = file_move($file, 'public://')) {
                 $file->status = FILE_STATUS_PERMANENT;
                 // $file->file_display = 1;
                 $file = file_save($file);
                 //set the extra values needed to make node_save work
                 $file->display = 1;
                 $file->description = "";
             }

             /* db_update('ideas')
                  //->expression('weight', 'weight + :weight', array(':weight' => 1))
                  ->fields(array( 'logo'=>@$file->uri))
                  ->condition('id', intval($_POST['id']))
                  //->condition('type', 'module')
                  ->execute();*/
         }

         /*$file = file_copy($file, 'public://');
         $edit['picture'] = $file;
         user_save($account, $edit);

         $filepath = $file->uri;
         $profile_url = image_style_url('thumbnail', $filepath);*/
     }

     //$data['image_url']= image_style_url('thumbnail',(@$file->uri));
     $data['image_url'] = image_style_url('large', (@$file->uri));
     $data['image_name']= (@$file->uri);
     echo json_encode(@$data) ;

}


